<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/eslint.config.ts">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/eslint.config.ts" />
              <option name="originalContent" value="import globals from &quot;globals&quot;;&#10;import tseslint from &quot;typescript-eslint&quot;;&#10;&#10;export default [&#10;    {&#10;        files: [&quot;**/*.{js,mjs,cjs,ts,mts,cts}&quot;],&#10;        languageOptions: {&#10;            globals: globals.node,&#10;            parser: tseslint.parser,&#10;            parserOptions: {&#10;                ecmaVersion: 2022,&#10;                sourceType: &quot;module&quot;,&#10;                project: &quot;./tsconfig.json&quot;,&#10;                tsconfigRootDir: import.meta.dirname,&#10;            },&#10;        },&#10;        plugins: {&#10;            &quot;@typescript-eslint&quot;: tseslint.plugin,&#10;        },&#10;        rules: {&#10;            ...tseslint.configs.recommended.rules,&#10;            &quot;@typescript-eslint/no-unused-vars&quot;: &quot;error&quot;,&#10;            &quot;@typescript-eslint/no-explicit-any&quot;: &quot;warn&quot;,&#10;            &quot;@typescript-eslint/explicit-function-return-type&quot;: &quot;off&quot;,&#10;            &quot;@typescript-eslint/explicit-module-boundary-types&quot;: &quot;off&quot;,&#10;            &quot;@typescript-eslint/no-inferrable-types&quot;: &quot;off&quot;,&#10;            &quot;prefer-const&quot;: &quot;error&quot;,&#10;            &quot;no-var&quot;: &quot;error&quot;,&#10;        },&#10;    },&#10;    {&#10;        files: [&quot;tests/**/*.ts&quot;],&#10;        rules: {&#10;            &quot;@typescript-eslint/no-explicit-any&quot;: &quot;off&quot;,&#10;        },&#10;    },&#10;];&#10;" />
              <option name="updatedContent" value="import globals from &quot;globals&quot;;&#10;import tseslint from &quot;typescript-eslint&quot;;&#10;&#10;export default [&#10;    {&#10;        files: [&quot;**/*.{js,mjs,cjs,ts,mts,cts}&quot;],&#10;        languageOptions: {&#10;            globals: globals.node,&#10;            parser: tseslint.parser,&#10;            parserOptions: {&#10;                ecmaVersion: 2022,&#10;                sourceType: &quot;module&quot;,&#10;                project: &quot;./tsconfig.json&quot;,&#10;                tsconfigRootDir: import.meta.dirname,&#10;            },&#10;        },&#10;        plugins: {&#10;            &quot;@typescript-eslint&quot;: tseslint.plugin,&#10;        },&#10;        rules: {&#10;            ...tseslint.configs.recommended.rules,&#10;            &quot;@typescript-eslint/no-unused-vars&quot;: &quot;error&quot;,&#10;            &quot;@typescript-eslint/no-explicit-any&quot;: &quot;warn&quot;,&#10;            &quot;@typescript-eslint/explicit-function-return-type&quot;: &quot;off&quot;,&#10;            &quot;@typescript-eslint/explicit-module-boundary-types&quot;: &quot;off&quot;,&#10;            &quot;@typescript-eslint/no-inferrable-types&quot;: &quot;off&quot;,&#10;            &quot;prefer-const&quot;: &quot;error&quot;,&#10;            &quot;no-var&quot;: &quot;error&quot;,&#10;        },&#10;    },&#10;    {&#10;        files: [&quot;tests/**/*.ts&quot;],&#10;        rules: {&#10;            &quot;@typescript-eslint/no-explicit-any&quot;: &quot;off&quot;,&#10;        },&#10;    },&#10;];" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>